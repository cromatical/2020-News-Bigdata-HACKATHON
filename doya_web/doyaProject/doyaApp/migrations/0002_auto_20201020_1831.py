# Generated by Django 3.1.2 on 2020-10-20 09:31

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('doyaApp', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_name', models.CharField(max_length=20)),
                ('user_email', models.CharField(max_length=20)),
                ('user_phone_num', models.CharField(max_length=20)),
                ('user_major', models.CharField(blank=True, choices=[('major_1', '간호'), ('major_2', '건축'), ('major_3', '경영'), ('major_4', '공예'), ('major_5', '관광'), ('major_6', '광고'), ('major_7', '교육'), ('major_8', '교통, 운송'), ('major_9', '기계, 금속'), ('major_10', '농림, 수산'), ('major_11', '도시, 토목'), ('major_12', '디자인'), ('major_13', '미술'), ('major_14', '법'), ('major_15', '뷰티아트'), ('major_16', '사진, 만화'), ('major_17', '사회과학'), ('major_18', '산업공학'), ('major_19', '생명과학'), ('major_20', '서비스'), ('major_21', '소재, 재료'), ('major_22', '수의학'), ('major_23', '식품'), ('major_24', '약학'), ('major_25', '언론'), ('major_26', '언어, 문학'), ('major_27', '에너지'), ('major_28', '연극, 영화'), ('major_29', '영상, 예술'), ('major_30', '유아교육'), ('major_31', '음악'), ('major_32', '응용소프트웨어'), ('major_33', '의류'), ('major_34', '인문과학'), ('major_35', '자연과학'), ('major_36', '전기, 전자'), ('major_37', '전산학, 컴퓨터공학'), ('major_38', '정보, 통신'), ('major_39', '조선'), ('major_40', '체육'), ('major_41', '초등교육'), ('major_42', '치료, 보건'), ('major_43', '특수교육'), ('major_44', '화공')], max_length=20, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.DeleteModel(
            name='User_info',
        ),
    ]
